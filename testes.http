### Vari√°veis globais
@baseUrl = http://localhost:3000
@contentType = application/json

### 1. üöÄ Registrar usu√°rio
POST {{baseUrl}}/user/register
Content-Type: {{contentType}}

{
  "email": "lucas@example.com",
  "password": "teste123",
  "name": "Lucas"
}

### 2. üîê Login
POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "lucas@example.com",
  "password": "teste123"
}

### 3. üíæ Salvar tokens (copie do response do login acima)
@accessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwic3ViIjoiZGUyYzkwZDYtZDJiNC00NzMxLTlhZDktNGViYTRmMDBiMTQ5Iiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzU5MDc5MDkyLCJleHAiOjE3NTkwODI2OTJ9.zSLRV_tChhly4MQQFJJHS2HslObU-CBUTBmKTwE7ZcQ
@refreshToken = af0a637752f5e323b29c52332b9b480d9d32ff6d3dfeadc9769e71073e06837b

### 4. üë§ Buscar perfil (rota protegida)
GET {{baseUrl}}/user/profile
Authorization: Bearer {{accessToken}}

### 5. üìã Listar usu√°rios (rota protegida)
GET {{baseUrl}}/user/profiles
Authorization: Bearer {{accessToken}}

### 6. üîÑ Renovar token
POST {{baseUrl}}/auth/refreshToken
Content-Type: {{contentType}}

{
  "refreshToken": "{{refreshToken}}"
}

### 7. ‚ùå Testar email duplicado
POST {{baseUrl}}/user/register
Content-Type: {{contentType}}

{
  "email": "test@example.com",
  "password": "654321",
  "name": "Maria Silva"
}

### 8. ‚ùå Testar login inv√°lido
POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "test@example.com",
  "password": "senhaerrada"
}

### 9. ‚ùå Testar dados inv√°lidos no registro
POST {{baseUrl}}/user/register
Content-Type: {{contentType}}

{
  "email": "email_invalido",
  "password": "123",
  "name": ""
}

### 10. ‚ùå Testar token inv√°lido
GET {{baseUrl}}/user/profile
Authorization: Bearer token_invalido_aqui




### ================ TESTES DE TOPICS ================

### 11. üìù Criar topic
POST {{baseUrl}}/topic
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "title": "Aprendendo NestJS",
  "description": "Estudos sobre framework Node.js e TypeScript"
}

### 12. üìù Criar segundo topic
POST {{baseUrl}}/topic
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "title": "TypeScript Avan√ßado",
  "description": "Conceitos avan√ßados de TypeScript e tipos"
}

### 13. üìù Criar terceiro topic
POST {{baseUrl}}/topic
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "title": "Docker e Containers",
  "description": "Containeriza√ß√£o de aplica√ß√µes com Docker"
}

### 14. üìã Listar todos os topics
GET {{baseUrl}}/topic
Authorization: Bearer {{accessToken}}

### 15. üë§ Buscar topics do usu√°rio logado
GET {{baseUrl}}/topic/topicsByUser
Authorization: Bearer {{accessToken}}

### 16. üîç Buscar topic espec√≠fico (substitua TOPIC_ID)
@topicId = 1cf50433-bc78-42cd-a817-7d049e516a3a
GET {{baseUrl}}/topic/{{topicId}}
Authorization: Bearer {{accessToken}}

### 17. ‚úèÔ∏è Atualizar topic
PATCH {{baseUrl}}/topic/{{topicId}}
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "title": "NestJS - T√≠tulo Atualizado",
  "description": "Descri√ß√£o atualizada sobre NestJS e suas funcionalidades"
}

### 18. üóëÔ∏è Deletar topic
DELETE {{baseUrl}}/topic/{{topicId}}
Authorization: Bearer {{accessToken}}

### ================ TESTES DE ERRO - TOPICS ================

### 19. ‚ùå Criar topic sem autentica√ß√£o
POST {{baseUrl}}/topic
Content-Type: {{contentType}}

{
  "title": "Topic sem auth",
  "description": "Este deve falhar"
}

### 20. ‚ùå Criar topic com dados inv√°lidos
POST {{baseUrl}}/topic
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "title": "",
  "description": ""
}

### 21. ‚ùå Criar topic com t√≠tulo muito longo
POST {{baseUrl}}/topic
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "title": "Este √© um t√≠tulo muito longo que excede o limite de 100 caracteres estabelecido na valida√ß√£o do DTO, ent√£o deve retornar erro de valida√ß√£o",
  "description": "Descri√ß√£o v√°lida"
}

### 22. ‚ùå Buscar topic inexistente
GET {{baseUrl}}/topic/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{accessToken}}

### 23. ‚ùå Atualizar topic inexistente
PATCH {{baseUrl}}/topic/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "title": "T√≠tulo para topic inexistente",
  "description": "Descri√ß√£o para topic inexistente"
}

### 24. ‚ùå Deletar topic inexistente
DELETE {{baseUrl}}/topic/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{accessToken}}

### 25. ‚ùå Buscar topic com token inv√°lido
GET {{baseUrl}}/topic
Authorization: Bearer token_invalido_aqui






### ================ TESTES DE COMMENTS ================

### 26. üí¨ Criar coment√°rio no primeiro topic
POST {{baseUrl}}/comments
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "content": "Este √© meu primeiro coment√°rio sobre NestJS!",
  "topicId": "{{topicId}}"
}

### 27. üí¨ Criar segundo coment√°rio
POST {{baseUrl}}/comments
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "content": "NestJS realmente √© um framework incr√≠vel para APIs REST!",
  "topicId": "{{topicId}}"
}

### 28. üí¨ Criar terceiro coment√°rio
POST {{baseUrl}}/comments
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "content": "Concordo! A documenta√ß√£o √© excelente tamb√©m.",
  "topicId": "{{topicId}}"
}

### 29. üíæ Salvar commentId (copie do response do coment√°rio criado)
@commentId = 8664664c-105f-400a-9015-015ac9541ea7

### 30. üìã Buscar coment√°rios por t√≥pico
GET {{baseUrl}}/comments/by-topic/{{topicId}}
Authorization: Bearer {{accessToken}}

### 31. üë§ Buscar meus coment√°rios
GET {{baseUrl}}/comments/my-comments
Authorization: Bearer {{accessToken}}

### 32. üîç Buscar coment√°rio espec√≠fico
GET {{baseUrl}}/comments/{{commentId}}
Authorization: Bearer {{accessToken}}

### 33. ‚úèÔ∏è Atualizar coment√°rio
PATCH {{baseUrl}}/comments/updateComment/{{commentId}}
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "content": "Coment√°rio atualizado: NestJS + TypeScript √© a combina√ß√£o perfeita!"
}

### 34. üóëÔ∏è Deletar coment√°rio
DELETE {{baseUrl}}/comments/deleteComment/{{commentId}}
Authorization: Bearer {{accessToken}}

### ================ TESTES DE ERRO - COMMENTS ================

### 35. ‚ùå Criar coment√°rio sem autentica√ß√£o
POST {{baseUrl}}/comments
Content-Type: {{contentType}}

{
  "content": "Coment√°rio sem auth",
  "topicId": "{{topicId}}"
}

### 36. ‚ùå Criar coment√°rio com dados inv√°lidos
POST {{baseUrl}}/comments
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "content": "",
  "topicId": "topicId_invalido"
}

### 37. ‚ùå Criar coment√°rio em t√≥pico inexistente
POST {{baseUrl}}/comments
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "content": "Coment√°rio em t√≥pico que n√£o existe",
  "topicId": "00000000-0000-0000-0000-000000000000"
}

### 38. ‚ùå Buscar coment√°rios de t√≥pico inexistente
GET {{baseUrl}}/comments/by-topic/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{accessToken}}

### 39. ‚ùå Buscar coment√°rio inexistente
GET {{baseUrl}}/comments/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{accessToken}}

### 40. ‚ùå Atualizar coment√°rio inexistente
PATCH {{baseUrl}}/comments/updateComment/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "content": "Tentando atualizar coment√°rio inexistente"
}

### 41. ‚ùå Deletar coment√°rio inexistente
DELETE {{baseUrl}}/comments/deleteComment/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{accessToken}}

### 42. ‚ùå Atualizar coment√°rio sem autentica√ß√£o
PATCH {{baseUrl}}/comments/updateComment/{{commentId}}
Content-Type: {{contentType}}

{
  "content": "Tentando atualizar sem token"
}

### 43. ‚ùå Deletar coment√°rio sem autentica√ß√£o
DELETE {{baseUrl}}/comments/deleteComment/{{commentId}}

### 44. ‚ùå Criar coment√°rio sem topicId
POST {{baseUrl}}/comments
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "content": "Coment√°rio sem topicId"
}

### 45. ‚ùå Criar coment√°rio sem content
POST {{baseUrl}}/comments
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "topicId": "{{topicId}}"
}








### ================ TESTES DE PROFILE ================

### 46. üë§ Criar perfil
POST {{baseUrl}}/profile
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "userName": "joaosilva123",
  "bio": "Desenvolvedor apaixonado por tecnologia e inova√ß√£o",
  "avatarUrl": "https://example.com/avatar.jpg",
  "capaUrl": "https://example.com/capa.jpg"
}

### 47. üë§ Criar segundo perfil (para testes)
# Primeiro registre outro usu√°rio
POST {{baseUrl}}/user/register
Content-Type: {{contentType}}

{
  "email": "maria@example.com",
  "password": "123456",
  "name": "maria Silva"
}

# Fa√ßa login
POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "maria@example.com",
  "password": "123456"
}

# Salve o token da Maria
@mariaToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hcmlhQGV4YW1wbGUuY29tIiwic3ViIjoiNWQ0YzliOTYtMGEyOS00NmQ4LWE5ZGUtY2Y5ZTdmYzlhNzk2IiwiaWF0IjoxNzU4NzI1MzU1LCJleHAiOjE3NTg3Mjg5NTV9.aeL-oszCRRcf3DivJQFLjBhfpem-8p7zyuJLflY1l9o


# Crie perfil p√∫blico da Maria
POST {{baseUrl}}/profile
Authorization: Bearer {{mariaToken}}
Content-Type: {{contentType}}

{
  "userName": "mariasantos",
  "bio": "Designer UX/UI especializada em interfaces modernas",
  "avatarUrl": "https://example.com/maria-avatar.jpg",
  "isPublic": true
}

### 48. üìã Buscar todos os perfis p√∫blicos
GET {{baseUrl}}/profile/all-profiles
Authorization: Bearer {{accessToken}}

### 49. üë§ Buscar meu perfil
GET {{baseUrl}}/profile/my-profile
Authorization: Bearer {{accessToken}}

### 50. üîç Buscar perfil de usu√°rio espec√≠fico
@userId = 75a8ac27-f307-492c-a8d0-8dabcd39b6ce
GET {{baseUrl}}/profile/{{userId}}
Authorization: Bearer {{accessToken}}

### 51. ‚úèÔ∏è Atualizar meu perfil
PATCH {{baseUrl}}/profile/update-profile
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "bio": "Bio atualizada: Desenvolvedor Full Stack especializado em NestJS e React",
  "avatarUrl": "https://example.com/new-avatar.jpg",
  "isPublic": true
}

### 52. üîí Tornar perfil privado
PATCH {{baseUrl}}/profile/update-profile
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "isPublic": false
}

### 53. üóëÔ∏è Deletar meu perfil
DELETE {{baseUrl}}/profile/delete-profile
Authorization: Bearer {{accessToken}}

### ================ TESTES DE ERRO - PROFILE ================

### 54. ‚ùå Criar perfil sem autentica√ß√£o
POST {{baseUrl}}/profile
Content-Type: {{contentType}}

{
  "userName": "usuariosemauth",
  "bio": "Tentativa sem token"
}

### 55. ‚ùå Criar perfil com dados inv√°lidos
POST {{baseUrl}}/profile
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "userName": "",
  "bio": "Esta bio tem mais de 200 caracteres e deveria falhar na valida√ß√£o. Lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua ut enim ad minim veniam quis nostrud exercitation",
  "avatarUrl": "url-invalida"
}

### 56. ‚ùå Criar perfil duplicado (mesmo usu√°rio)
POST {{baseUrl}}/profile
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "userName": "tentativaduplica",
  "bio": "Segundo perfil do mesmo usu√°rio"
}

### 57. ‚ùå Buscar perfil inexistente
GET {{baseUrl}}/profile/00000000-0000-0000-0000-000000000000
Authorization: Bearer {{accessToken}}

### 58. ‚ùå Buscar meu perfil sem ter criado
# Use um usu√°rio novo que n√£o criou perfil
POST {{baseUrl}}/user/register
Content-Type: {{contentType}}

{
  "email": "semperfil@example.com",
  "password": "123456",
  "name": "Sem Perfil"
}

POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "semperfil@example.com",
  "password": "123456"
}

@tokenSemPerfil = COLE_TOKEN_AQUI

GET {{baseUrl}}/profile/my-profile
Authorization: Bearer {{tokenSemPerfil}}

### 59. ‚ùå Atualizar perfil sem ter criado
PATCH {{baseUrl}}/profile/update-profile
Authorization: Bearer {{tokenSemPerfil}}
Content-Type: {{contentType}}

{
  "bio": "Tentativa de atualizar sem ter perfil"
}

### 60. ‚ùå Deletar perfil sem ter criado
DELETE {{baseUrl}}/profile/delete-profile
Authorization: Bearer {{tokenSemPerfil}}

### 61. ‚ùå Buscar perfil com token inv√°lido
GET {{baseUrl}}/profile/my-profile
Authorization: Bearer token_invalido_aqui

### 62. ‚ùå Tentar criar perfil com username j√° existente
POST {{baseUrl}}/profile
Authorization: Bearer {{mariaToken}}
Content-Type: {{contentType}}

{
  "userName": "joaosilva123",
  "bio": "Tentativa de usar username duplicado"
}

### 63. ‚ùå Avatar URL inv√°lida
POST {{baseUrl}}/profile
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "userName": "testeurl",
  "avatarUrl": "nao-eh-uma-url",
  "capaUrl": "tambem-nao-eh-url"
}

### ================ TESTES DE PRIVACIDADE - PROFILE ================

### 64. üîí Tentar buscar perfil privado de outro usu√°rio
# Assumindo que o perfil principal est√° privado
GET {{baseUrl}}/profile/{{userId}}
Authorization: Bearer {{mariaToken}}

### 65. üîì Tornar perfil p√∫blico e tentar buscar novamente
PATCH {{baseUrl}}/profile/update-profile
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "isPublic": true
}

GET {{baseUrl}}/profile/{{userId}}
Authorization: Bearer {{mariaToken}}

### 66. üìä Verificar se perfis privados n√£o aparecem na listagem p√∫blica
GET {{baseUrl}}/profile/all-profiles
Authorization: Bearer {{accessToken}}