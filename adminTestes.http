### ================ CONFIGURA√á√ÉO ================
@baseUrl = http://localhost:3000
@contentType = application/json

### ================ 1. LOGIN ADMIN ================

### üîê Login como administrador
POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "admin@example.com",
  "password": "admin123",
}

# ‚úÖ Copie o access_token da resposta acima
@adminToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwic3ViIjoiZGUyYzkwZDYtZDJiNC00NzMxLTlhZDktNGViYTRmMDBiMTQ5Iiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzU5MDc4MTk4LCJleHAiOjE3NTkwODE3OTh9.R9D7P87RuDBbm8MLfw411ZD9W1TZfbMUAbcRaqWYV2E
### üîê Login usu√°rio comum (para testes)
POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "user@example.com",
  "password": "user123"
}

# ‚úÖ Copie o access_token da resposta acima
@userToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

### ================ 2. DASHBOARD ADMINISTRATIVO ================

### üìä Listar todos os usu√°rios (Admin)
GET {{baseUrl}}/user/profiles
Authorization: Bearer {{adminToken}}

### üëë Listar todos os administradores
GET {{baseUrl}}/user/admins
Authorization: Bearer {{adminToken}}

### üö´ Listar usu√°rios banidos
GET {{baseUrl}}/user/admin/bannedUsers
Authorization: Bearer {{adminToken}}

### ================ 3. GERENCIAMENTO DE ROLES ================

# Primeiro, identifique um usu√°rio para promover/rebaixar
@targetUserId = 5d4c9b96-0a29-46d8-a9de-cf9e7fc9a796

### üëë Promover usu√°rio comum a administrador
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/role
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "role": "admin"
}

### üë§ Rebaixar administrador a usu√°rio comum
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/role
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "role": "user"
}

### ================ 4. SISTEMA DE BANIMENTO ================

# ID do usu√°rio que ser√° banido (substitua por um ID real)
@userToBanId = 5d4c9b96-0a29-46d8-a9de-cf9e7fc9a796

### üö´ Banir usu√°rio
PATCH {{baseUrl}}/user/admin/{{userToBanId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": "Viola√ß√£o dos termos de uso - comportamento inadequado nos coment√°rios"
}

### ‚úÖ Desbanir usu√°rio
PATCH {{baseUrl}}/user/admin/{{userToBanId}}/unban
Authorization: Bearer {{adminToken}}

### ================ 5. VALIDA√á√ÉO DE BANIMENTO ================

### ‚ùå Usu√°rio banido tentando fazer login
POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "maria@example.com",
  "password": "senha123"
}

### ‚ùå Usu√°rio banido tentando usar JWT (deve falhar)
@bannedUserToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hcmlhQGV4YW1wbGUuY29tIiwic3ViIjoiNWQ0YzliOTYtMGEyOS00NmQ4LWE5ZGUtY2Y5ZTdmYzlhNzk2Iiwicm9sZSI6InVzZXIiLCJpYXQiOjE3NTg5OTA0MDksImV4cCI6MTc1ODk5NDAwOX0.S6G24RPL55ma6t9SZLD8nsYKucPVvwjun10P9r8-ugI
GET {{baseUrl}}/user/profile
Authorization: Bearer {{bannedUserToken}}

### ================ 6. TESTES DE AUTORIZA√á√ÉO ================

### ‚ùå Usu√°rio comum tentando acessar lista de usu√°rios (deve falhar)
GET {{baseUrl}}/user/profile
Authorization: Bearer {{userToken}}

### ‚ùå Usu√°rio comum tentando banir algu√©m (deve falhar)
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/ban
Authorization: Bearer {{userToken}}
Content-Type: {{contentType}}

{
  "reason": "Tentativa de usu√°rio comum"
}

### ‚ùå Usu√°rio comum tentando promover algu√©m (deve falhar)
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/role
Authorization: Bearer {{userToken}}
Content-Type: {{contentType}}

{
  "role": "admin"
}

### ‚ùå Acesso sem token (deve falhar)
GET {{baseUrl}}/user/admins

### ================ 7. TESTES DE VALIDA√á√ÉO DE NEG√ìCIO ================

### ‚ùå Tentar banir usu√°rio inexistente
@fakeUserId = 00000000-0000-0000-0000-000000000000
PATCH {{baseUrl}}/user/admin/{{fakeUserId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": "Teste com usu√°rio inexistente"
}

### ‚ùå Tentar promover usu√°rio inexistente
PATCH {{baseUrl}}/user/admin/{{fakeUserId}}/role
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "role": "admin"
}

### ‚ùå Tentar banir outro administrador (deve falhar)
@otherAdminId = COLE_ID_DE_OUTRO_ADMIN
PATCH {{baseUrl}}/user/admin/{{otherAdminId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": "Tentativa de banir admin"
}

### ‚ùå Tentar alterar pr√≥pria role (deve falhar)
PATCH {{baseUrl}}/user/admin/{{adminId}}/role
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "role": "user"
}

### ‚ùå Tentar banir a si mesmo (deve falhar)
PATCH {{baseUrl}}/user/admin/{{adminId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": "Auto-banimento"
}

### ================ 8. TESTES DE VALIDA√á√ÉO DE DTO ================

### ‚ùå Banir com motivo muito curto (deve falhar)
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": "Curto"
}

### ‚ùå Banir sem motivo (deve falhar)
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": ""
}

### ‚ùå Promover com role inv√°lida (deve falhar)
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/role
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "role": "superuser"
}

### ‚ùå Promover sem especificar role (deve falhar)
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/role
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{}

### ================ 9. TESTES DE REFRESH TOKEN ================

### ‚ùå Refresh token de usu√°rio banido (deve falhar)
@bannedUserRefreshToken = REFRESH_TOKEN_DE_USUARIO_BANIDO
POST {{baseUrl}}/auth/refreshToken
Content-Type: {{contentType}}

{
  "refreshToken": "{{bannedUserRefreshToken}}"
}

### ‚úÖ Refresh token de usu√°rio v√°lido (deve funcionar)
@validRefreshToken = REFRESH_TOKEN_VALIDO
POST {{baseUrl}}/auth/refreshToken
Content-Type: {{contentType}}

{
  "refreshToken": "{{validRefreshToken}}"
}

### ================ 10. TESTES DE FLUXO COMPLETO ================

### üìù CEN√ÅRIO: Usu√°rio √© banido, tenta usar sistema, √© desbanido
# 1. Banir usu√°rio
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": "Teste de fluxo completo - banimento tempor√°rio"
}

# 2. Verificar se aparece na lista de banidos
GET {{baseUrl}}/user/banned
Authorization: Bearer {{adminToken}}

# 3. Usu√°rio banido tenta fazer login (deve falhar)
POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "email@do.usuario.banido",
  "password": "senha123"
}

# 4. Desbanir usu√°rio
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/unban
Authorization: Bearer {{adminToken}}

# 5. Usu√°rio desbanido consegue fazer login novamente
POST {{baseUrl}}/auth/signIn
Content-Type: {{contentType}}

{
  "email": "email@do.usuario.desbanido",
  "password": "senha123"
}

### ================ 11. TESTES DE EDGE CASES ================

### ‚ùå Token expirado
@expiredToken = TOKEN_EXPIRADO
GET {{baseUrl}}/user/profile
Authorization: Bearer {{expiredToken}}

### ‚ùå Token malformado
@malformedToken = token-invalido-123
GET {{baseUrl}}/user/profile
Authorization: Bearer {{malformedToken}}

### ‚ùå Tentar desbanir usu√°rio que n√£o est√° banido
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/unban
Authorization: Bearer {{adminToken}}

### ‚ùå Tentar banir usu√°rio j√° banido
# Primeiro banir
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": "Primeiro banimento"
}

# Depois tentar banir novamente (deve falhar)
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/ban
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "reason": "Segundo banimento - deve falhar"
}

### ================ 12. TESTES DE CONSULTA ================

### üìã Ver detalhes de um usu√°rio espec√≠fico
GET {{baseUrl}}/user/{{targetUserId}}
Authorization: Bearer {{adminToken}}

### üîç Tentar ver usu√°rio inexistente
GET {{baseUrl}}/user/{{fakeUserId}}
Authorization: Bearer {{adminToken}}

### ================ NOTAS IMPORTANTES ================

# üìù ANTES DE EXECUTAR:
# 1. ‚úÖ Substituir todos os @vari√°veis com valores reais
# 2. ‚úÖ Ter pelo menos 1 admin e 2 usu√°rios comuns no banco
# 3. ‚úÖ Verificar se o servidor est√° rodando na porta 3000
# 4. ‚úÖ Confirmar se as rotas est√£o configuradas corretamente

# üîç RESULTADOS ESPERADOS:
# ‚úÖ Admins conseguem banir/desbanir usu√°rios
# ‚úÖ Admins conseguem promover/rebaixar usu√°rios
# ‚úÖ Usu√°rios banidos s√£o bloqueados imediatamente
# ‚úÖ Tokens de usu√°rios banidos s√£o invalidados
# ‚ùå Usu√°rios comuns n√£o conseguem acessar rotas admin
# ‚ùå N√£o √© poss√≠vel banir administradores
# ‚ùå N√£o √© poss√≠vel remover o √∫ltimo admin

# üìä C√ìDIGOS HTTP ESPERADOS:
# 200 - Opera√ß√µes bem-sucedidas
# 401 - Token inv√°lido/expirado/usu√°rio banido
# 403 - Sem permiss√£o (usu√°rio comum tentando a√ß√£o admin)
# 404 - Usu√°rio n√£o encontrado
# 409 - Conflito (j√° banido, j√° admin, etc.)
# 400 - Dados inv√°lidos no DTO

### ================ LIMPEZA DE DADOS ================

### üßπ Para limpar dados de teste ap√≥s os testes
# Desbanir todos os usu√°rios de teste
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/unban
Authorization: Bearer {{adminToken}}

# Rebaixar usu√°rios promovidos durante os testes
PATCH {{baseUrl}}/user/admin/{{targetUserId}}/role
Authorization: Bearer {{adminToken}}
Content-Type: {{contentType}}

{
  "role": "user"
}